// Generated by IcedCoffeeScript 108.0.11

/* based on jQuery
 * 
 * Copyright 2016 http://www.bndy.net
 * Released by Bndy on Oct 19, 2016
 * 
 * Optional Conponent: icheck (https://github.com/fronteed/icheck)
 * 
 * Example:
 *   $('#chkAll').checkAll('.child', {
 *       inverse: true,  // true to inverse the checkbox, otherwise all or none
 *       end: function(){
 *           var checked = $(this).prop('checked');
 *           console.debug(checked ? 'Checked' : 'Unchecked');
 *       }
 *   });
 */

(function() {
  (function($) {
    return $.fn.extend({
      checkAll: function(selector, options) {
        var end, inverse, sender;
        sender = $(this);
        end = options ? options.end : null;
        inverse = options ? options.inverse : false;
        return sender.click(function() {
          var checked;
          if (!inverse) {
            checked = $(this).is(":checked");
            $(selector).prop("checked", checked);
          } else {
            $(selector).each(function() {
              checked = $(this).is(":checked");
              return $(this).prop("checked", !checked);
            });
          }
          if (end) {
            return end.bind(sender)();
          }
        });
      },
      icheckAll: function(selector, options) {
        var end, inverse, sender, withICheck;
        sender = $(this);
        withICheck = sender.parent().attr('class') && sender.parent().attr('class').indexOf("icheckbox_") >= 0;
        if (withICheck) {
          end = options ? options.end : null;
          inverse = options ? options.inverse : false;
          return sender.on("ifChanged", function(event) {
            var checked;
            if (inverse) {
              $(selector).iCheck("toggle");
            } else {
              checked = $(sender).is(":checked");
              $(selector).iCheck(checked ? "check" : "uncheck");
            }
            if (end) {
              return end.bind(sender)();
            }
          });
        } else {
          return sender.checkAll(selector, options);
        }
      }
    });
  })(jQuery);

}).call(this);
